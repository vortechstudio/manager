import{a as S,b as d}from"./konva-3dc0d119.js";import{R as a}from"./react-5c625ba7.js";import{c as C,R as D}from"./react-reconciler-d4c1103e.js";import{s as g}from"./scheduler-765c72db.js";import{F as A,u as L}from"./its-fine-2c678f3c.js";const p={children:!0,ref:!0,key:!0,style:!0,forwardedRef:!0,unstable_applyCache:!0,unstable_applyDrawHitFromCache:!0};let E=!1,w=!1;const h=".react-konva-event";let x=!1;function M(e){x=e}const N=`ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.
Position of a node will be changed during drag&drop, so you should update state of the react app as well.
Consider to add onDragMove or onDragEnd events.
For more info see: https://github.com/konvajs/react-konva/issues/256
`,K=`ReactKonva: You are using "zIndex" attribute for a Konva node.
react-konva may get confused with ordering. Just define correct order of elements in your render function of a component.
For more info see: https://github.com/konvajs/react-konva/issues/194
`,G={};function v(e,t,o=G){if(!E&&"zIndex"in t&&(console.warn(K),E=!0),!w&&t.draggable){var s=t.x!==void 0||t.y!==void 0,u=t.onDragEnd||t.onDragMove;s&&!u&&(console.warn(N),w=!0)}for(var n in o)if(!p[n]){var i=n.slice(0,2)==="on",f=o[n]!==t[n];if(i&&f){var r=n.substr(2).toLowerCase();r.substr(0,7)==="content"&&(r="content"+r.substr(7,1).toUpperCase()+r.substr(8)),e.off(r,o[n])}var I=!t.hasOwnProperty(n);I&&e.setAttr(n,void 0)}var P=x||t._useStrictMode,b={},y=!1;const m={};for(var n in t)if(!p[n]){var i=n.slice(0,2)==="on",_=o[n]!==t[n];if(i&&_){var r=n.substr(2).toLowerCase();r.substr(0,7)==="content"&&(r="content"+r.substr(7,1).toUpperCase()+r.substr(8)),t[n]&&(m[r]=t[n])}!i&&(t[n]!==o[n]||P&&t[n]!==e.getAttr(n))&&(y=!0,b[n]=t[n])}y&&(e.setAttrs(b),c(e));for(var r in m)e.on(r+h,m[r])}function c(e){if(!S.autoDrawEnabled){var t=e.getLayer()||e.getStage();t&&t.batchDraw()}}const T={},F={};d.Node.prototype._applyProps=v;function O(e,t){if(typeof t=="string"){console.error(`Do not use plain text as child of Konva.Node. You are using text: ${t}`);return}e.add(t),c(e)}function U(e,t,o){let s=d[e];s||(console.error(`Konva has no node with the type ${e}. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: "import "konva/lib/shapes/${e}"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html`),s=d.Group);const u={},n={};for(var i in t){var f=i.slice(0,2)==="on";f?n[i]=t[i]:u[i]=t[i]}const r=new s(u);return v(r,n),r}function W(e,t,o){console.error(`Text components are not supported for now in ReactKonva. Your text is: "${e}"`)}function j(e,t,o){return!1}function B(e){return e}function H(){return null}function $(){return null}function z(e,t,o,s){return F}function Y(){}function k(e){}function Z(e,t){return!1}function X(){return T}function q(){return T}const J=setTimeout,V=clearTimeout,Q=-1;function ee(e,t){return!1}const te=!1,ne=!0,oe=!0;function re(e,t){t.parent===e?t.moveToTop():e.add(t),c(e)}function ae(e,t){t.parent===e?t.moveToTop():e.add(t),c(e)}function R(e,t,o){t._remove(),e.add(t),t.setZIndex(o.getZIndex()),c(e)}function ie(e,t,o){R(e,t,o)}function se(e,t){t.destroy(),t.off(h),c(e)}function ue(e,t){t.destroy(),t.off(h),c(e)}function ce(e,t,o){console.error(`Text components are not yet supported in ReactKonva. You text is: "${o}"`)}function fe(e,t,o){}function le(e,t,o,s,u){v(e,u,s)}function de(e){e.hide(),c(e)}function ve(e){}function me(e,t){(t.visible==null||t.visible)&&e.show()}function ge(e,t){}function he(e){}function be(){}const ye=()=>C.DefaultEventPriority,pe=Object.freeze(Object.defineProperty({__proto__:null,appendChild:re,appendChildToContainer:ae,appendInitialChild:O,cancelTimeout:V,clearContainer:he,commitMount:fe,commitTextUpdate:ce,commitUpdate:le,createInstance:U,createTextInstance:W,detachDeletedInstance:be,finalizeInitialChildren:j,getChildHostContext:q,getCurrentEventPriority:ye,getPublicInstance:B,getRootHostContext:X,hideInstance:de,hideTextInstance:ve,idlePriority:g.unstable_IdlePriority,insertBefore:R,insertInContainerBefore:ie,isPrimaryRenderer:te,noTimeout:Q,now:g.unstable_now,prepareForCommit:H,preparePortalMount:$,prepareUpdate:z,removeChild:se,removeChildFromContainer:ue,resetAfterCommit:Y,resetTextContent:k,run:g.unstable_runWithPriority,scheduleTimeout:J,shouldDeprioritizeSubtree:Z,shouldSetTextContent:ee,supportsMutation:oe,unhideInstance:me,unhideTextInstance:ge,warnsIfNotActing:ne},Symbol.toStringTag,{value:"Module"}));function Ee(e){const t=a.useRef({});return a.useLayoutEffect(()=>{t.current=e}),a.useLayoutEffect(()=>()=>{t.current={}},[]),t.current}const we=e=>{const t=a.useRef(),o=a.useRef(),s=a.useRef(),u=Ee(e),n=L(),i=f=>{const{forwardedRef:r}=e;r&&(typeof r=="function"?r(f):r.current=f)};return a.useLayoutEffect(()=>(o.current=new d.Stage({width:e.width,height:e.height,container:t.current}),i(o.current),s.current=l.createContainer(o.current,C.LegacyRoot,!1,null),l.updateContainer(a.createElement(n,{},e.children),s.current),()=>{d.isBrowser&&(i(null),l.updateContainer(null,s.current,null),o.current.destroy())}),[]),a.useLayoutEffect(()=>{i(o.current),v(o.current,e,u),l.updateContainer(a.createElement(n,{},e.children),s.current,null)}),a.createElement("div",{ref:t,id:e.id,accessKey:e.accessKey,className:e.className,role:e.role,style:e.style,tabIndex:e.tabIndex,title:e.title})},Pe="Layer",_e="Group",Se="Rect",De="Ellipse",Ae="Line",Le="Image",Me="Text",Ne="RegularPolygon",Ke="Arrow",Ge="Transformer",l=D(pe);l.injectIntoDevTools({findHostInstanceByFiber:()=>null,bundleType:0,version:a.version,rendererPackageName:"react-konva"});const Fe=a.forwardRef((e,t)=>a.createElement(A,{},a.createElement(we,{...e,forwardedRef:t}))),Oe=M;export{Ke as A,De as E,_e as G,Le as I,Pe as L,Se as R,Fe as S,Me as T,Ne as a,Ae as b,Ge as c,Oe as u};
